package com.exmart.qiyishow.ui.user;

import java.util.HashMap;

import cn.sharesdk.framework.Platform;
import cn.sharesdk.framework.PlatformActionListener;
import cn.sharesdk.framework.ShareSDK;
import cn.sharesdk.framework.utils.UIHandler;
import cn.sharesdk.sina.weibo.SinaWeibo;
import cn.sharesdk.tencent.qq.QQ;

import com.exmart.qiyishow.R;
import com.exmart.qiyishow.analysisJson.JSONCommon;
import com.exmart.qiyishow.analysisJson.UserJson;
import com.exmart.qiyishow.bean.CommData;
import com.exmart.qiyishow.bean.User;
import com.exmart.qiyishow.loader.core.DisplayImageOptions;
import com.exmart.qiyishow.loader.core.ImageLoader;
import com.exmart.qiyishow.loader.core.display.RoundedBitmapDisplayer;
import com.exmart.qiyishow.loader.core.display.SimpleBitmapDisplayer;
import com.exmart.qiyishow.tools.Constant;
import com.exmart.qiyishow.tools.Data;
import com.exmart.qiyishow.tools.HttpNetwork;
import com.exmart.qiyishow.tools.Tools;
import com.exmart.qiyishow.ui.frame.VideoGridFragment;
import com.exmart.qiyishow.ui.home.EditDataActivity;
import com.exmart.qiyishow.ui.home.MessageActivity;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Space;
import android.widget.Toast;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.TextView;

/**
 * 
 * 用户主页
 * 
 */
public class UserInfoActivity extends Fragment implements OnClickListener,
		OnCheckedChangeListener, PlatformActionListener, Callback {
	private TextView mTvName;

	private ImageView mIvAvatar;
	private Fragment mAlreadyPublic;
	private Fragment mNoPublic;
	private RadioButton mRbAready;
	private RadioButton mRbWill;
	private Activity mActiviy;
	private TextView mText_title_left;
	private TextView mText_title_right;
	private DisplayImageOptions optionsAvatar;

	String SP_user_id;
	String SP_user_name;
	String SP_user_photo;
	
	private TextView mText_QQ;
	private TextView mText_Sina;
	private View mView;
	private Handler mHandler;
	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.home_layout, container, false);
		mActiviy = getActivity();
		IntentFilter filter = new IntentFilter("com.login.status");
		mActiviy.registerReceiver(new LoginStatusReciver(), filter);
		ShareSDK.initSDK(mActiviy);
		return view;
	}

	@Override
	public void onViewCreated(View view, Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);
		mView = view;
		mHandler = new Handler(this);
//		SP_user_id = Tools.getValueInSharedPreference(getActivity(),
//				Constant.SPNAME, Constant.USERID);
		mText_QQ = (TextView) view.findViewById(R.id.qq_login);
		mText_Sina = (TextView) view.findViewById(R.id.sina_login);
		mText_QQ.setOnClickListener(this);
		mText_Sina.setOnClickListener(this);
		TextView title = (TextView) view.findViewById(R.id.tv_title);
		title.setText(getString(R.string.edit_my_info_title));
		mTvName = (TextView) view.findViewById(R.id.tv_user_name);
		mIvAvatar = (ImageView) view.findViewById(R.id.iv_avatar);
		mIvAvatar.setOnClickListener(this);
		replaceView(mView);
		
	}
	

	private void initView(View view) {
		view.findViewById(R.id.realease_fragment_content).setVisibility(View.VISIBLE);
		SP_user_id = Tools.getValueInSharedPreference(getActivity(),
				Constant.SPNAME, Constant.USERID);
		SP_user_name = Tools.getValueInSharedPreference(getActivity(),
				Constant.SPNAME, Constant.NAME);
		SP_user_photo = Tools.getValueInSharedPreference(getActivity(),
				Constant.SPNAME, Constant.PHOTO);
		
		

//		mText_title_left = (TextView) view.findViewById(R.id.bt_back);
		mText_title_right = (TextView) view.findViewById(R.id.bt_title_right);
		
//		mText_title_left.setVisibility(View.VISIBLE);
		mText_title_right.setVisibility(View.VISIBLE);

//		mText_title_left.setBackgroundResource(R.drawable.userinfo_edit_bg);
		mText_title_right.setBackgroundResource(R.drawable.userinfo_message_bg);

//		mText_title_left.setOnClickListener(this);
		mText_title_right.setOnClickListener(this);

		
		mRbAready = (RadioButton) view.findViewById(R.id.rb_already);
		mRbWill = (RadioButton) view.findViewById(R.id.rb_will);
		mRbAready.setChecked(true);
		 view.findViewById(R.id.rg_tab).setVisibility(View.VISIBLE);
		((RadioGroup) view.findViewById(R.id.rg_tab))
				.setOnCheckedChangeListener(this);
		
		/** 加载头像 */
		optionsAvatar = new DisplayImageOptions.Builder().cacheInMemory(true)
				.cacheOnDisk(true).displayer(new SimpleBitmapDisplayer())
				.considerExifParams(true)
				.displayer(new RoundedBitmapDisplayer(100)).build();
		mTvName.setText(SP_user_name);
		Log.d("data", "SP_user_photo = " + SP_user_photo);
		ImageLoader.getInstance().displayImage(SP_user_photo, mIvAvatar,
				optionsAvatar);
	}
	
	private void replaceView(View view){
		RadioGroup group = ((RadioGroup) view.findViewById(R.id.rg_tab));
		group.setOnCheckedChangeListener(this);
		SP_user_id = Tools.getValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.USERID);
		if (TextUtils.isEmpty(SP_user_id)) {
			group.setVisibility(View.GONE);
			view.findViewById(R.id.realease_fragment_content).setVisibility(View.GONE);
			view.findViewById(R.id.rl_login_tip).setVisibility(View.VISIBLE);
			view.findViewById(R.id.ll_login_way).setVisibility(View.VISIBLE);
			mTvName.setText("");
			mIvAvatar.setBackgroundResource(R.drawable.login_default_avatar);
			mIvAvatar.setImageBitmap(null);
		} else {
			view.findViewById(R.id.rl_login_tip).setVisibility(View.GONE);
			view.findViewById(R.id.ll_login_way).setVisibility(View.GONE);
			initView(mView);
		}
	}

	@Override
	public void onResume() {
		super.onResume();
	}

	@Override
	public void onClick(View v) {
		Intent intent;
		switch (v.getId()) {
//		case R.id.bt_back:
//			intent = new Intent(mActiviy, EditDataActivity.class);
//			startActivity(intent);
//			break;

		case R.id.bt_title_right:
			intent = new Intent(mActiviy, MessageActivity.class);
			startActivity(intent);
			break;
		case R.id.qq_login:
			authorize(new QQ(mActiviy));
			break;
		case R.id.sina_login:
			authorize(new SinaWeibo(mActiviy));
			break;
		case R.id.iv_avatar:
			if (TextUtils.isEmpty(SP_user_id)) {
				
			} else {
				intent = new Intent(mActiviy, EditDataActivity.class);
				startActivity(intent);
			}
			break;
		default:
			break;
		}
	}
	
	private void authorize(Platform plat) {
		if (plat.isValid()) {
			plat.removeAccount();
		}
		plat.setPlatformActionListener(this);
		plat.showUser(null);
	}

	@Override
	public void onCheckedChanged(RadioGroup group, int checkedId) {

		if (mRbAready.getId() == checkedId) {
			FragmentTransaction transaction = getChildFragmentManager()
					.beginTransaction();
			if (mAlreadyPublic == null) {
				mAlreadyPublic = VideoGridFragment
						.getVideoGridFragmentInstance("3", SP_user_id);
				transaction.add(R.id.realease_fragment_content, mAlreadyPublic);
				if (mNoPublic != null) {
					transaction.hide(mNoPublic);
				}
				transaction.commit();
			} else {
				transaction = getChildFragmentManager().beginTransaction();
				transaction.show(mAlreadyPublic);
				if (mNoPublic != null) {
					transaction.hide(mNoPublic);
				}
				transaction.commit();
			}
			mRbAready.setTextColor(getResources().getColor(R.color.blue_user));
			mRbWill.setTextColor(getResources().getColor(R.color.white));
		} else if (mRbWill.getId() == checkedId) {
			FragmentTransaction transaction = getChildFragmentManager()
					.beginTransaction();
			if (mNoPublic == null) {

				mNoPublic = VideoGridFragment.getVideoGridFragmentInstance("4",
						SP_user_id);
				transaction.add(R.id.realease_fragment_content, mNoPublic);
				transaction.hide(mAlreadyPublic);
				transaction.commit();
			} else {
				transaction.show(mNoPublic);
				transaction.hide(mAlreadyPublic);
				transaction.commit();
			}
			mRbWill.setTextColor(getResources().getColor(R.color.blue_user));
			mRbAready.setTextColor(getResources().getColor(R.color.white));
		}
	}

	@Override
	public void onCancel(Platform arg0, int arg1) {
		if (arg1 == Platform.ACTION_USER_INFOR) {
			UIHandler.sendEmptyMessage(Constant.MSG_AUTH_CANCEL, this);
		}
	}

	@Override
	public void onComplete(final Platform arg0, int action,HashMap<String, Object> arg2) {
		if (action == Platform.ACTION_USER_INFOR) {
			UIHandler.sendEmptyMessage(Constant.MSG_AUTH_COMPLETE, this);
			arg0.setPlatformActionListener(null);
			String userId = arg0.getDb().getUserId();
			String userName =  arg0.getDb().getUserName();
			String userPhoto = arg0.getDb().getUserIcon();
//			String token = arg0.getDb().getToken();
			LoginRequest(userId, userPhoto, userName);
		}
	}

	@Override
	public void onError(Platform arg0, int arg1, Throwable arg2) {
		if (arg1 == Platform.ACTION_USER_INFOR) {
			UIHandler.sendEmptyMessage(Constant.MSG_AUTH_ERROR, this);
		}
		arg2.printStackTrace();
	}

	@Override
	public boolean handleMessage(Message msg) {
		switch (msg.what) {
		case Constant.MSG_USERID_FOUND: 
			Toast.makeText(mActiviy, R.string.userid_found, Toast.LENGTH_SHORT).show();
			break;
		case Constant.MSG_LOGIN: 
			String text = getString(R.string.logining, msg.obj);
			Toast.makeText(mActiviy, text, Toast.LENGTH_SHORT).show();
			initView(mView);
			break;
		case Constant.MSG_AUTH_CANCEL: 
			Toast.makeText(mActiviy, R.string.auth_cancel, Toast.LENGTH_SHORT).show();
			break;
		case Constant.MSG_AUTH_ERROR: 
			Toast.makeText(mActiviy, R.string.auth_error, Toast.LENGTH_SHORT).show();
			break;
		case Constant.MSG_AUTH_COMPLETE: 
			Toast.makeText(mActiviy, R.string.auth_complete, Toast.LENGTH_SHORT).show();
			break;
		case 10:
			User user = (User) msg.obj;
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.USERID, user.getId());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.NAME, user.getNikeName());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.SEX, user.getSex());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.PHOTO, user.getImageUrl());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.PROVINCE, user.getProvince());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.CITY, user.getCity());
			Tools.setValueInSharedPreference(mActiviy, Constant.SPNAME, Constant.AREA, user.getArea());
			mView.findViewById(R.id.rl_login_tip).setVisibility(View.GONE);
			mView.findViewById(R.id.ll_login_way).setVisibility(View.GONE);
			Intent intent = new Intent("com.login.status");
			mActiviy.sendBroadcast(intent);
			initView(mView);
			break;
		case 20:
			String str = (String)msg.obj;
			Toast.makeText(mActiviy, str, Toast.LENGTH_SHORT).show();
			break;
		}
		return false;
	}
	private void LoginRequest(final String LoginId,final String PhotoUrl,final String UserName){
		new Thread(){
			public void run() {
				String result = HttpNetwork.httpNetwork(Data.ThreeUserLogin(mActiviy, LoginId, PhotoUrl, UserName), Constant.THREEUSERLOGIN, mActiviy);
				Log.d("data", "result="+result);
				CommData commData = null;
				User user = null;
				try {
					commData = new JSONCommon().getCommonCode(result);
					if (commData.getCode().equals("1")) {
						UserJson json = new UserJson(commData.getJosnObj());
						user = json.parse();
						Message msg = mHandler.obtainMessage(10);
						msg.obj = user;
						msg.sendToTarget();
					}else{
						Message msg = mHandler.obtainMessage(20);
						msg.obj = commData.getMsg();
						msg.sendToTarget();
						msg.sendToTarget();	
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			};
			
		}.start();
	}
	class LoginStatusReciver extends BroadcastReceiver {

		@Override
		public void onReceive(Context context, Intent intent) {
			if (intent.getAction().equals("com.login.status")) {
				replaceView(mView);
			}
		}
	}
}
