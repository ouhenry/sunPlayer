package com.exmart.qiyishow.ui.user;

import com.exmart.qiyishow.R;
import com.exmart.qiyishow.adapter.TabsAdapter;
import com.exmart.qiyishow.loader.core.DisplayImageOptions;
import com.exmart.qiyishow.loader.core.ImageLoader;
import com.exmart.qiyishow.loader.core.display.RoundedBitmapDisplayer;
import com.exmart.qiyishow.loader.core.display.SimpleBitmapDisplayer;
import com.exmart.qiyishow.tools.Constant;
import com.exmart.qiyishow.tools.Tools;
import com.exmart.qiyishow.ui.frame.HomeFrame;
import com.exmart.qiyishow.ui.frame.VideoGridFragment;
import com.exmart.qiyishow.ui.home.EditDataActivity;
import com.exmart.qiyishow.ui.home.MessageActivity;
import com.exmart.qiyishow.ui.view.RoundImageView;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.gesture.Gesture;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.KeyEvent;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.TabHost;
import android.widget.TextView;
/**
 * 
 * 用户主页
 *
 */
public class UserInfoActivity extends Fragment implements OnClickListener,
		OnCheckedChangeListener {
	private TextView mTvName;
	
	private ImageView mIvAvatar;
	private Fragment mAlreadyPublic;
	private Fragment mNoPublic;
	private RadioButton mRbAready;
	private RadioButton mRbWill;
	private Activity mActiviy;
	private TextView mText_title_left;
	private TextView mText_title_right;
	private DisplayImageOptions optionsAvatar;
	
	String SP_user_id;
	String SP_user_name;
	String SP_user_photo;
	
	

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.home_layout, container, false);
		mActiviy = getActivity();
		return view;
	}

	@Override
	public void onViewCreated(View view, Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);
		SP_user_id = Tools.getValueInSharedPreference(getActivity(), Constant.SPNAME, Constant.USERID);
		SP_user_name = Tools.getValueInSharedPreference(getActivity(), Constant.SPNAME, Constant.NAME);
		SP_user_photo = Tools.getValueInSharedPreference(getActivity(), Constant.SPNAME, Constant.PHOTO);
		
		TextView title = (TextView) view.findViewById(R.id.tv_title);
		title.setText(getString(R.string.edit_my_info_title));
		((RadioGroup) view.findViewById(R.id.rg_tab))
				.setOnCheckedChangeListener(this);
		mRbAready = (RadioButton) view.findViewById(R.id.rb_already);
		mRbWill = (RadioButton) view.findViewById(R.id.rb_will);
		mText_title_left = (TextView) view.findViewById(R.id.bt_back);
		mText_title_right = (TextView) view.findViewById(R.id.bt_title_right);
		
		mText_title_left.setVisibility(View.VISIBLE);
		mText_title_right.setVisibility(View.VISIBLE);
		
		mText_title_left.setBackgroundResource(R.drawable.userinfo_edit_bg);
		mText_title_right.setBackgroundResource(R.drawable.userinfo_message_bg);
		
		mText_title_left.setOnClickListener(this);
		mText_title_right.setOnClickListener(this);
		
		mTvName = (TextView) view.findViewById(R.id.tv_user_name);
		mIvAvatar = (ImageView) view.findViewById(R.id.iv_avatar);
		mRbAready.setChecked(true);
		initView();
//		if (isLogin()) {
//			mTvName.setVisibility(View.VISIBLE);
//			String name = PreferenceManager.getDefaultSharedPreferences(
//					mActiviy).getString("name", getString(R.string.unknown));
//			mTvName.setText(name);
//		} else {
//			mIvAvatar.setVisibility(View.VISIBLE);
//		}
		optionsAvatar = new DisplayImageOptions.Builder()
		.cacheInMemory(true)
		.cacheOnDisk(true)
		.displayer(new SimpleBitmapDisplayer())
		.considerExifParams(true)
		.displayer(new RoundedBitmapDisplayer(100))
		.build();
		mTvName.setText(SP_user_name);
		Log.d("data", "SP_user_photo = "+SP_user_photo);
		ImageLoader.getInstance().displayImage(SP_user_photo, mIvAvatar, optionsAvatar);
		
		mIvAvatar.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(mActiviy, LoginActivity.class);
				startActivity(intent);
			}
		});
		
		
	}

	private void initView() {
		
	}
	@Override
	public void onResume() {
		super.onResume();
		if(Constant.isRefresh){
			SP_user_name = Tools.getValueInSharedPreference(getActivity(), Constant.SPNAME, Constant.NAME);
			SP_user_photo = Tools.getValueInSharedPreference(getActivity(), Constant.SPNAME, Constant.PHOTO);
			mTvName.setText(SP_user_name);
			ImageLoader.getInstance().displayImage(SP_user_photo, mIvAvatar, optionsAvatar);
		}
		
	}

	private boolean isLogin() {
		SharedPreferences preferences = PreferenceManager
				.getDefaultSharedPreferences(mActiviy);
		return preferences.getBoolean("isLogin", false);
	}

	@Override
	public void onClick(View v) {
		Intent intent;
		switch (v.getId()) {
		case R.id.bt_back:
			intent = new Intent(mActiviy, EditDataActivity.class);
			startActivity(intent);
			Constant.isRefresh = false;
			break;

		case R.id.bt_title_right:
			intent = new Intent(mActiviy, MessageActivity.class);
			startActivity(intent);
			break;
		default:
			break;
		}
	}

	@Override
	public void onCheckedChanged(RadioGroup group, int checkedId) {
		
		if (mRbAready.getId() == checkedId) {
			FragmentTransaction transaction = getChildFragmentManager()
					.beginTransaction();
			if(mAlreadyPublic == null){
				mAlreadyPublic = VideoGridFragment.getVideoGridFragmentInstance("3", "1");
				transaction.add(R.id.realease_fragment_content,
						mAlreadyPublic);
				if(mNoPublic != null){
					transaction.hide(mNoPublic);
				}
				transaction.commit();
			}else{
				 transaction = getChildFragmentManager()
						.beginTransaction();
				transaction.show(mAlreadyPublic);
				if(mNoPublic != null){
					transaction.hide(mNoPublic);
				}
				transaction.commit();
			}
			mRbAready.setTextColor(getResources().getColor(R.color.blue_user));
			mRbWill.setTextColor(getResources().getColor(R.color.white));
		} else if (mRbWill.getId() == checkedId) {
			FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
			if(mNoPublic == null){
				
				mNoPublic = VideoGridFragment.getVideoGridFragmentInstance("4", "1");
				transaction.add(R.id.realease_fragment_content,
						mNoPublic);
				transaction.hide(mAlreadyPublic);
				transaction.commit();
			} else {
				transaction.show(mNoPublic);
				transaction.hide(mAlreadyPublic);
				transaction.commit();
			}
			mRbWill.setTextColor(getResources().getColor(R.color.blue_user));
			mRbAready.setTextColor(getResources().getColor(R.color.white));
		}
	}
}
